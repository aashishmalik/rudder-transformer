// Generated by CodiumAI
const { getGroupedEvents } = require('./util');
describe('getGroupedEvents', () => {

    // // Tests that the function returns an empty array when inputs is empty
    it('should return an empty array when inputs is empty', () => {
      const inputs = [];
      const result = getGroupedEvents(inputs);
      expect(result).toEqual([]);
    });

    // // Tests that the function returns an array with one element when inputs has only one event
    it('should return an array with one element when inputs has only one event', () => {
      const inputs = [{ metadata: { userId: '1', job_id: '123' } }];
      const result = getGroupedEvents(inputs);
      expect(result).toEqual([[{ metadata: { userId: '1', job_id: '123' } }]]);
    });

    // // Tests that the function returns an array with one element when inputs has multiple events but all have the same userId
    it('should return an array with one element when inputs has multiple events with the same userId', () => {
      const inputs = [
        { metadata: { userId: '1', job_id: '123' } },
        { metadata: { userId: '1', job_id: '456' } },
        { metadata: { userId: '1', job_id: '789' } }
      ];
      const result = getGroupedEvents(inputs);
      expect(result).toEqual([[{ metadata: { userId: '1', job_id: '123' } }, { metadata: { userId: '1', job_id: '456' } }, { metadata: { userId: '1', job_id: '789' } }]]);
    });

    // Tests that the function returns an array with multiple elements when inputs has multiple events with different userIds
    it('should return an array with multiple elements when inputs has multiple events with different userIds', () => {
      const inputs = [
        { metadata: { userId: '1', job_id: '123' } },
        { metadata: { userId: '2', job_id: '456' } },
        { metadata: { userId: '3', job_id: '789' } }
      ];
      const result = getGroupedEvents(inputs);
      console.log(JSON.stringify(result));
      expect(result).toEqual([
        [{ metadata: { userId: '1', job_id: '123' } }],
        [{ metadata: { userId: '2', job_id: '456' } }],
        [{ metadata: { userId: '3', job_id: '789' } }]
      ]);
    });

    // Tests that the function returns an array with multiple elements when inputs has multiple events with same userIds and some have the different job_id
    it('should return an array with multiple elements when inputs has multiple events with same userIds and some have the different job_id', () => {
      const inputs = [
        { metadata: { userId: '1', job_id: '123' } },
        { metadata: { userId: '2', job_id: '456' } },
        { metadata: { userId: '3', job_id: '789' } },
        { metadata: { userId: '1', job_id: '981' } }
      ];
      const result = getGroupedEvents(inputs);
      expect(result).toEqual([
        [{ metadata: { userId: '1', job_id: '123' } }, 
         { metadata: { userId: '1', job_id: '981' } }],
        [{ metadata: { userId: '2', job_id: '456' } }],
        [{ metadata: { userId: '3', job_id: '789' } }]
      ]);
    });
});
